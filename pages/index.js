import Head from 'next/head'
import styles from '../styles/Home.module.css'
import { useState, useEffect } from 'react'
import {db} from '../firebase'
import { collection, onSnapshot, addDoc, doc, deleteDoc, updateDoc} from "firebase/firestore";
import { Button } from '@mui/material';


export default function Home() {

  //string variable
  const [text, setText] = useState('');

  //string variable - for the edit submission
  const [editText, setEditText] = useState('');

  const [todoEdit, setTodoEdit] = useState('');

  //string array
  const [todo, setTodo] = useState([]);
  // console.log(todo);

  function updateTodo () {
    setTodo([]);
    const x = collection(db, "todos");
    onSnapshot(x, snapshot =>{
      // console.log(snapshot.docs.map(doc => doc.id));
      setTodo(snapshot.docs.map((doc) => ({...doc.data(),id:doc.id})))
      // setTodo (snapshot.docs.map((doc) => doc.data()));
    })
  }

  //runs on start up
  useEffect(() => {
    updateTodo();
  }, []);

  //add to array function
  const add = (e) => {
    e.preventDefault();
    addDoc(collection(db,"todos"),{timestamp: Date.now(), text: text})
    updateTodo();
    setText('');
    // update. function firebase
  }

  //add to array function
  function deletion (id) {
    // e.preventDefault();
    //delete doc
    const userDoc = doc(db, "todos", id);
    deleteDoc(userDoc);
    updateTodo();

  }

  //edit submit function 
  const subEdit = (id) => {
    const userDoc = doc(db,"todos",id);
    const newFields = {text: editText};
    updateDoc(userDoc,newFields);
    setTodoEdit(editText);
    setEditText('');
  }


  return (
    <div className={styles.container}>
      <Head>
        <title>TO-DO LIST</title>
        <meta name="application to keep track of tasks" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      
      <main>
        <h1 className={styles.title}>TO-DO LIST</h1>

        <div className={styles.div}>
          <form>
            <input value={text} className={styles.input} onChange={e => setText(e.target.value)}></input>

            <button className={styles.button} onClick={add}>Add</button>

          </form>

        </div>

        <div className={styles.flexV}>
          {todo.map((item) => {
              return (
                <div className={styles.flex}>
                  {todoEdit ===  item.timestamp ? 
                  <input type="text" value={editText} className={styles.input} onChange={e => setEditText(e.target.value)}></input>
                  : 
                  <p className={styles.todo}>{item.text}</p>
                  }
                
                  {todoEdit ===  item.timestamp ? 
                  <button className={styles.delete} name={item.timestamp} onClick={() => subEdit(item.id)}>Submit Edit</button>
                  : <button className={styles.delete} name={item.timestamp} onClick={() => setTodoEdit(item.timestamp)}>Edit</button>
                  }
          
                  <button className={styles.delete} name={item.timestamp} onClick={() => deletion(item.id)}>DEL</button>
                </div>
              )
            })}

        </div>
        
      </main>
     
    </div>
  )
}
